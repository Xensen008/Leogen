import React, { useState, useEffect } from 'react';
import styled from 'styled-components';
import Searchbar from '../components/Searchbar/Searchbar';
import ImageCards from '../components/Cards/ImageCards';
import { GetPosts } from '../api/index.js';
import CircularProgress from '@mui/material/CircularProgress';

const Container = styled.div`
  height: 100%;
  overflow-y: scroll;
  background: ${({ theme }) => theme.bg};
  padding: 30px 30px;
  padding-bottom: 50px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  @media only screen and (max-width: 600px) {
    padding: 6px 10px;
  }
`;

const Headline = styled.h1`
  font-size: 40px;
  font-weight: 700;
  text-align: center;
  display: flex;
  flex-direction: column;
  color: ${({ theme }) => theme.text_primary};
  @media only screen and (max-width: 600px) {
    font-size: 25px;
    padding-left: 10px;
    padding-right: 10px;
  }
`;

const Span = styled.span`
  font-size: 20px;
  font-weight: 600;
  color: ${({ theme }) => theme.secondary};
  @media only screen and (max-width: 600px) {
    font-size: 20px;
  }
`;

const Wrapper = styled.div`
  display: flex;
  justify-content: center;
  width: 100%;
  max-width: 1100px;
  padding: 32px 0;
`;

const CardWrapper = styled.div`
  display: grid;
  gap: 20px;
  @media (min-width: 1200px) {
    grid-template-columns: repeat(4, 1fr);
  }
  @media (min-width: 640px) and (max-width: 1199px) {
    grid-template-columns: repeat(3, 1fr);
  }
  @media (max-width: 689px) {
    grid-template-columns: repeat(2, 1fr);
  }
`;

const Home = () => {
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [search, setSearch] = useState('');
  const [filteredPosts, setFilteredPosts] = useState([]);

  const getPosts = async () => {
    setLoading(true);
    await GetPosts()
      .then((res) => {
        // console.log(res);
        setPosts(res?.data?.data || []);
        setLoading(false);
        setFilteredPosts(res?.data?.data || []);
      })
      .catch((err) => {
        setError(err.message);
        setLoading(false);
      });
  };

  useEffect(() => {
    getPosts();
  }, []);

  return (
    <Container>
      <Headline>
        Explore popular images in Our community
        <Span>⦿ Generated by AI ⦿</Span>
      </Headline>
      <Searchbar />
      <Wrapper>
        {error && <p style={{ color: 'red' }}>{error}</p>}
        {loading ? (
          <CircularProgress />
        ) : (
          <CardWrapper>
            {filteredPosts.slice().reverse().map((post) => (
              <ImageCards key={post._id} post={post} />
            ))}
          </CardWrapper>
        )}
      </Wrapper>
    </Container>
  );
};

export default Home;